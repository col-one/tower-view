variables: 
  CARGO_HOME: $CI_PROJECT_DIR/cargo

cache:
  paths:
    - cargo/
    - target/

stages:
  - build
  - test

build:centos7:
  image: 'accuminium/rust-centos:latest'
  stage: build
  before_script:
    - yum update -y
    - yum install alsa-lib-devel libX11-devel freetype freetype-devel cmake expat expat-devel libxml2-devel python3 python3-libs xcb-util-devel python3-devel python3-pip xcb-util -y
    # - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y
    # - set PATH=~/.cargo/bin:$PATH
  script:
    - rustc --version
    - cargo --version
    - cargo build --release
    - chmod +x packaging/centos/install.sh
    - tar -czvf tower.centos7.$CI_COMMIT_SHA.tar.gz config -C packaging centos -C ../target/release tower
  artifacts:
    paths:
      - tower.centos7.$CI_COMMIT_SHA.tar.gz

build:ubuntu:
  image: 'rust:latest'
  stage: build
  before_script:
    - apt-get update -y
    - apt-get install libasound2-dev libxcb-xrm-dev libxcb-xfixes0-dev libxcb-shape0-dev -y
  script:
    - rustc --version
    - cargo --version
    - cargo build --release
    # - chmod +x packaging/centos/install.sh
    - tar -czvf tower.ubuntu.$CI_COMMIT_SHA.tar.gz config -C target/release tower
  artifacts:
    paths:
      - tower.ubuntu.$CI_COMMIT_SHA.tar.gz
      
build:windows:
  image: 'mcr.microsoft.com/windows/nanoserver'
  stage: build
  before_script:
    - powershell -command "& { iwr https://win.rustup.rs -OutFile C:/TEMP/rustup-init.exe }"
    - powershell -command "& { C:/TEMP/rustup-init.exe --default-toolchain stable -y }"
  script:
    - rustc --version
    - cargo --version
    - cargo build --release
    - tar -czvf tower.windows.$CI_COMMIT_SHA.tar.gz config -C target/release tower
  artifacts:
    paths:
      - tower.windows.$CI_COMMIT_SHA.tar.gz

test:centos:
    image: 'centos:7'
    stage: test
    script:
      - echo CACA
      - ls -l .
    dependencies:
      - build:centos7
